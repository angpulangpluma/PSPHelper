/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pspHelper;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static pspHelper.DocumentGenerator.gen;
import pspHelper.ValueChecker;

/**
 *
 * @author Hannah
 */
public class MainForm extends javax.swing.JFrame {

    private String type;
    private JPanel panel;
    private ValueChecker valueChecker;
    
    public MainForm(JPanel panel, String type) {
        initComponents();
        this.type = type;
        this.panel = panel;
        valueChecker = new ValueChecker(this);
        title.setText(type);
        setPreferredSize(new Dimension(1057, 675));
        center();
        scrollPane.setViewportView(panel);
        repaint(); revalidate();
    }
    
    public void center() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    
    private void close() {
        setVisible(false);
        dispose();
    }
    
    private void addBody() {
        switch(type) {
            case "Project Plan Summary": ((PPS)panel).generate(); break;
            case "Defect Recording Log": ((DefectRecordingLog)panel).generate(); break;
            case "Time Recording Log": ((TimeRecordingLog)panel).generate(); break;
            case "Source Program Listing": ((SourceProgramListing)panel).generate(); break;
            case "Process Improvement Proposal": ((PIP)panel).generate(); break;
            case "Program Results (2A)": ((ProgramResults_X)panel).generate(); break;
            case "Program Results (3A)": ((ProgramResults_Y)panel).generate(); break;
            case "Test Result Template": ((TestResult)panel).generate(); break;
            case "Size Estimating Template": ((SizeEstimatingTemplate)panel).generate(); break;
            case "Task Planning Template": ((TaskPlanningTemplate)panel).generate(); break;
            case "Schedule Planning Template": ((SchedulePlanningTemplate)panel).generate(); break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        title = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        professor = new javax.swing.JTextField();
        student = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        section = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        language = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1057, 529));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("GENERATE DOCUMENT");
        jButton1.setBorder(null);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("HOME");
        jButton2.setBorder(null);
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollPane.setBackground(new java.awt.Color(255, 255, 255));
        scrollPane.setBorder(null);
        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setMinimumSize(new java.awt.Dimension(1042, 800));
        scrollPane.setPreferredSize(new java.awt.Dimension(1042, 800));

        title.setBackground(new java.awt.Color(153, 153, 153));
        title.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("PSP0 PROJECT PLAN SUMMARY");
        title.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(153, 153, 153));
        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Student");

        jLabel4.setBackground(new java.awt.Color(153, 153, 153));
        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Professor");

        professor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        professor.setForeground(new java.awt.Color(102, 102, 102));
        professor.setText("Dr. Raymund Sison");
        professor.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        professor.setOpaque(false);

        student.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        student.setForeground(new java.awt.Color(102, 102, 102));
        student.setText("Hannah Elien L. Sibayan");
        student.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        student.setOpaque(false);

        jLabel7.setBackground(new java.awt.Color(153, 153, 153));
        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Date");

        date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        date.setForeground(new java.awt.Color(102, 102, 102));
        date.setText("01/01/16");
        date.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        date.setOpaque(false);

        jLabel5.setBackground(new java.awt.Color(153, 153, 153));
        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Section");

        section.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        section.setForeground(new java.awt.Color(102, 102, 102));
        section.setText("X23");
        section.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        section.setOpaque(false);

        jLabel6.setBackground(new java.awt.Color(153, 153, 153));
        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Language");

        language.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        language.setForeground(new java.awt.Color(102, 102, 102));
        language.setText("C");
        language.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        language.setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(professor, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(date)
                    .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(language)
                .addContainerGap())
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(professor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(language, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 459, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        close();
        MainFrame main = new MainFrame();
        main.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean validEntries = false;
        switch(type){
            case "Project Plan Summary": 
//                ((PPS)panel).generate(); 
                switch(((PPS)panel).getType()){
                    case 1:
                        if (valueChecker.checkNumericValueTable(((PPS)panel).getTable6(), 1, ((PPS)panel).getTable6().getRowCount()-1) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable6(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable6(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 2, 0))
                            validEntries = true;
                        break;
                    case 2:
                    case 3:
                        if (valueChecker.checkNumericValueTable(((PPS)panel).getTable7(), 1, 5) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable7(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable7(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 2, 0))
                            validEntries = true;
                        break;
                    case 4:
                        if (valueChecker.checkNumericValueTable(((PPS)panel).getTable0(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable0(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable0(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable2(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable2(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable2(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 2, 0))
                            validEntries = true;
                        break;
                    case 5:
                        if (valueChecker.checkNumericValueTable(((PPS)panel).getTable1(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable1(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable1(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable2(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable2(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable2(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable3(), 3, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable4(), 2, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 1, 0) &&
                            valueChecker.checkNumericValueTable(((PPS)panel).getTable5(), 2, 0))
                            validEntries = true;
                        break;
                }    
                break;
            case "Defect Recording Log": 
//                ((DefectRecordingLog)panel).generate(); 
                if (valueChecker.checkNumericValueTable(((DefectRecordingLog)panel).getDRLTable(), 2, 0) &&
                    valueChecker.checkNumericValueTable(((DefectRecordingLog)panel).getDRLTable(), 5, 0) &&
                    valueChecker.checkNumericValueTable(((DefectRecordingLog)panel).getDRLTable(), 6, 0))
                    validEntries = true;
                break;
            case "Time Recording Log": 
                if (valueChecker.checkDateValueTable(((TimeRecordingLog)panel).getTimeLog(), 0, 0) &&
                    valueChecker.checkTimeValueTable(((TimeRecordingLog)panel).getTimeLog(), 1, 0) &&
                    valueChecker.checkTimeValueTable(((TimeRecordingLog)panel).getTimeLog(), 2, 0) &&
                    valueChecker.checkNumericValueTable(((TimeRecordingLog)panel).getTimeLog(), 3, 0) &&
                    valueChecker.checkNumericValueTable(((TimeRecordingLog)panel).getTimeLog(), 4, 0))
                    validEntries = true;
                break;
            case "Source Program Listing": ((SourceProgramListing)panel).generate(); break;
            case "Process Improvement Proposal":  
                if ( valueChecker.checkNumericValueTable(((PIP)panel).getProblemTablePIP(), 0, 0) &&
                     valueChecker.checkNumericValueTable(((PIP)panel).getProposalTablePIP(), 0, 0) ) 
                    validEntries = true;
                break;
            case "Program Results (2A)": 
                if (valueChecker.checkNumericValueTable(((ProgramResults_X)panel).getTable(), 0, 0) &&
                    valueChecker.checkNumericValueTable(((ProgramResults_X)panel).getTable(), 1, 0))
                    validEntries = true;
                break;
            case "Program Results (3A)": 
                if (valueChecker.checkNumericValueTable(((ProgramResults_Y)panel).getTable(), 2, 0) &&
                    valueChecker.checkNumericValueTable(((ProgramResults_Y)panel).getTable(), 3, 0))
                    validEntries = true;
                break;
            case "Test Result Template": ((TestResult)panel).generate(); break;
            case "Size Estimating Template": 
                if (valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getBaseSize()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getLOCDeleted()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getLOCModified()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getProjectedLOC()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getBeta0()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getBeta1()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getEstimatedNewandChangedLOC()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getEstimatedTotalLOC()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getTotalNewReused()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getPredictionRange()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getUpperPredictionInterval()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getLowerPredictionInterval()) &&
                    valueChecker.checkNumericValueText(((SizeEstimatingTemplate)panel).getPredictionIntervalPercent()) &&
                    valueChecker.checkNumericValueTable(((SizeEstimatingTemplate)panel).getProjectedLOCTable(), 4, 0) &&
                    valueChecker.checkNumericValueTable(((SizeEstimatingTemplate)panel).getNewObjects(), 4, 0) &&
                    valueChecker.checkNumericValueTable(((SizeEstimatingTemplate)panel).getReusedObjects(), 1, 0))
                    validEntries = true;
                break;
            case "Task Planning Template": ((TaskPlanningTemplate)panel).generate(); break;
            case "Schedule Planning Template": 
                if (valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 2, 0) &&
                    valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 3, 0) &&
                    valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 4, 0) &&
                    valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 5, 0) &&
                    valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 6, 0) &&
                    valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 7, 0) &&
                    valueChecker.checkNumericValueTable(((SchedulePlanningTemplate)panel).getScheduleTable(), 8, 0))
                    validEntries = true;
                break;
        }
        if(validEntries){
            gen.createNewDoc(type);
            gen.addHeader(type, student.getText(), professor.getText(), date.getText(), section.getText(), language.getText());
            addBody();
            gen.saveDoc();
        } else {
            JOptionPane.showMessageDialog(this, "Please correct your input.");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
        */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField language;
    private javax.swing.JTextField professor;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextField section;
    private javax.swing.JTextField student;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
